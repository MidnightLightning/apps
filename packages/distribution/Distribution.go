// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package distribution

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DistributionABI is the input ABI used to generate the binding from.
const DistributionABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"hasInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_root\",\"type\":\"bytes32\"},{\"name\":\"_username\",\"type\":\"bytes32\"},{\"name\":\"_award\",\"type\":\"uint256\"},{\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"validate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_root\",\"type\":\"bytes32\"},{\"name\":\"_username\",\"type\":\"bytes32\"},{\"name\":\"_award\",\"type\":\"uint256\"},{\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"award\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_script\",\"type\":\"bytes\"}],\"name\":\"getEVMScriptExecutor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRecoveryVault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hashAddress\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_username\",\"type\":\"bytes32\"},{\"name\":\"_award\",\"type\":\"uint256\"}],\"name\":\"hash\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_username\",\"type\":\"bytes32\"}],\"name\":\"hashBytes20\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"checkProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenManager\",\"type\":\"address\"},{\"name\":\"_karmaManager\",\"type\":\"address\"},{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START_DISTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"karmaManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"allowRecoverability\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"appId\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitializationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_root\",\"type\":\"bytes32\"},{\"name\":\"_username\",\"type\":\"bytes32\"}],\"name\":\"claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRootsCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"transferToVault\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"bytes32\"},{\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"canPerform\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEVMScriptRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getUsername\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"addRoot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"distributions\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPetrified\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_username\",\"type\":\"bytes32\"}],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"DistributionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"username\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"award\",\"type\":\"uint256\"}],\"name\":\"UserAwarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"script\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"input\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"ScriptResult\",\"type\":\"event\"}]"

// DistributionBin is the compiled bytecode used for deploying new contracts.
const DistributionBin = ``

// DeployDistribution deploys a new Ethereum contract, binding an instance of Distribution to it.
func DeployDistribution(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Distribution, error) {
	parsed, err := abi.JSON(strings.NewReader(DistributionABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(DistributionBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Distribution{DistributionCaller: DistributionCaller{contract: contract}, DistributionTransactor: DistributionTransactor{contract: contract}, DistributionFilterer: DistributionFilterer{contract: contract}}, nil
}

// Distribution is an auto generated Go binding around an Ethereum contract.
type Distribution struct {
	DistributionCaller     // Read-only binding to the contract
	DistributionTransactor // Write-only binding to the contract
	DistributionFilterer   // Log filterer for contract events
}

// DistributionCaller is an auto generated read-only Go binding around an Ethereum contract.
type DistributionCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DistributionTransactor is an auto generated write-only Go binding around an Ethereum contract.
type DistributionTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DistributionFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type DistributionFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DistributionSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type DistributionSession struct {
	Contract     *Distribution     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DistributionCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type DistributionCallerSession struct {
	Contract *DistributionCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// DistributionTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type DistributionTransactorSession struct {
	Contract     *DistributionTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// DistributionRaw is an auto generated low-level Go binding around an Ethereum contract.
type DistributionRaw struct {
	Contract *Distribution // Generic contract binding to access the raw methods on
}

// DistributionCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type DistributionCallerRaw struct {
	Contract *DistributionCaller // Generic read-only contract binding to access the raw methods on
}

// DistributionTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type DistributionTransactorRaw struct {
	Contract *DistributionTransactor // Generic write-only contract binding to access the raw methods on
}

// NewDistribution creates a new instance of Distribution, bound to a specific deployed contract.
func NewDistribution(address common.Address, backend bind.ContractBackend) (*Distribution, error) {
	contract, err := bindDistribution(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Distribution{DistributionCaller: DistributionCaller{contract: contract}, DistributionTransactor: DistributionTransactor{contract: contract}, DistributionFilterer: DistributionFilterer{contract: contract}}, nil
}

// NewDistributionCaller creates a new read-only instance of Distribution, bound to a specific deployed contract.
func NewDistributionCaller(address common.Address, caller bind.ContractCaller) (*DistributionCaller, error) {
	contract, err := bindDistribution(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &DistributionCaller{contract: contract}, nil
}

// NewDistributionTransactor creates a new write-only instance of Distribution, bound to a specific deployed contract.
func NewDistributionTransactor(address common.Address, transactor bind.ContractTransactor) (*DistributionTransactor, error) {
	contract, err := bindDistribution(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &DistributionTransactor{contract: contract}, nil
}

// NewDistributionFilterer creates a new log filterer instance of Distribution, bound to a specific deployed contract.
func NewDistributionFilterer(address common.Address, filterer bind.ContractFilterer) (*DistributionFilterer, error) {
	contract, err := bindDistribution(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &DistributionFilterer{contract: contract}, nil
}

// bindDistribution binds a generic wrapper to an already deployed contract.
func bindDistribution(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(DistributionABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Distribution *DistributionRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Distribution.Contract.DistributionCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Distribution *DistributionRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Distribution.Contract.DistributionTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Distribution *DistributionRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Distribution.Contract.DistributionTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Distribution *DistributionCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Distribution.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Distribution *DistributionTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Distribution.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Distribution *DistributionTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Distribution.Contract.contract.Transact(opts, method, params...)
}

// STARTDISTRIBUTION is a free data retrieval call binding the contract method 0x7148ce35.
//
// Solidity: function START_DISTRIBUTION() constant returns(bytes32)
func (_Distribution *DistributionCaller) STARTDISTRIBUTION(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "START_DISTRIBUTION")
	return *ret0, err
}

// STARTDISTRIBUTION is a free data retrieval call binding the contract method 0x7148ce35.
//
// Solidity: function START_DISTRIBUTION() constant returns(bytes32)
func (_Distribution *DistributionSession) STARTDISTRIBUTION() ([32]byte, error) {
	return _Distribution.Contract.STARTDISTRIBUTION(&_Distribution.CallOpts)
}

// STARTDISTRIBUTION is a free data retrieval call binding the contract method 0x7148ce35.
//
// Solidity: function START_DISTRIBUTION() constant returns(bytes32)
func (_Distribution *DistributionCallerSession) STARTDISTRIBUTION() ([32]byte, error) {
	return _Distribution.Contract.STARTDISTRIBUTION(&_Distribution.CallOpts)
}

// AllowRecoverability is a free data retrieval call binding the contract method 0x7e7db6e1.
//
// Solidity: function allowRecoverability(address token) constant returns(bool)
func (_Distribution *DistributionCaller) AllowRecoverability(opts *bind.CallOpts, token common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "allowRecoverability", token)
	return *ret0, err
}

// AllowRecoverability is a free data retrieval call binding the contract method 0x7e7db6e1.
//
// Solidity: function allowRecoverability(address token) constant returns(bool)
func (_Distribution *DistributionSession) AllowRecoverability(token common.Address) (bool, error) {
	return _Distribution.Contract.AllowRecoverability(&_Distribution.CallOpts, token)
}

// AllowRecoverability is a free data retrieval call binding the contract method 0x7e7db6e1.
//
// Solidity: function allowRecoverability(address token) constant returns(bool)
func (_Distribution *DistributionCallerSession) AllowRecoverability(token common.Address) (bool, error) {
	return _Distribution.Contract.AllowRecoverability(&_Distribution.CallOpts, token)
}

// AppId is a free data retrieval call binding the contract method 0x80afdea8.
//
// Solidity: function appId() constant returns(bytes32)
func (_Distribution *DistributionCaller) AppId(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "appId")
	return *ret0, err
}

// AppId is a free data retrieval call binding the contract method 0x80afdea8.
//
// Solidity: function appId() constant returns(bytes32)
func (_Distribution *DistributionSession) AppId() ([32]byte, error) {
	return _Distribution.Contract.AppId(&_Distribution.CallOpts)
}

// AppId is a free data retrieval call binding the contract method 0x80afdea8.
//
// Solidity: function appId() constant returns(bytes32)
func (_Distribution *DistributionCallerSession) AppId() ([32]byte, error) {
	return _Distribution.Contract.AppId(&_Distribution.CallOpts)
}

// CanPerform is a free data retrieval call binding the contract method 0xa1658fad.
//
// Solidity: function canPerform(address _sender, bytes32 _role, uint256[] _params) constant returns(bool)
func (_Distribution *DistributionCaller) CanPerform(opts *bind.CallOpts, _sender common.Address, _role [32]byte, _params []*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "canPerform", _sender, _role, _params)
	return *ret0, err
}

// CanPerform is a free data retrieval call binding the contract method 0xa1658fad.
//
// Solidity: function canPerform(address _sender, bytes32 _role, uint256[] _params) constant returns(bool)
func (_Distribution *DistributionSession) CanPerform(_sender common.Address, _role [32]byte, _params []*big.Int) (bool, error) {
	return _Distribution.Contract.CanPerform(&_Distribution.CallOpts, _sender, _role, _params)
}

// CanPerform is a free data retrieval call binding the contract method 0xa1658fad.
//
// Solidity: function canPerform(address _sender, bytes32 _role, uint256[] _params) constant returns(bool)
func (_Distribution *DistributionCallerSession) CanPerform(_sender common.Address, _role [32]byte, _params []*big.Int) (bool, error) {
	return _Distribution.Contract.CanPerform(&_Distribution.CallOpts, _sender, _role, _params)
}

// CheckProof is a free data retrieval call binding the contract method 0x611f5764.
//
// Solidity: function checkProof(bytes32 root, bytes32[] proof, bytes32 hash) constant returns(bool)
func (_Distribution *DistributionCaller) CheckProof(opts *bind.CallOpts, root [32]byte, proof [][32]byte, hash [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "checkProof", root, proof, hash)
	return *ret0, err
}

// CheckProof is a free data retrieval call binding the contract method 0x611f5764.
//
// Solidity: function checkProof(bytes32 root, bytes32[] proof, bytes32 hash) constant returns(bool)
func (_Distribution *DistributionSession) CheckProof(root [32]byte, proof [][32]byte, hash [32]byte) (bool, error) {
	return _Distribution.Contract.CheckProof(&_Distribution.CallOpts, root, proof, hash)
}

// CheckProof is a free data retrieval call binding the contract method 0x611f5764.
//
// Solidity: function checkProof(bytes32 root, bytes32[] proof, bytes32 hash) constant returns(bool)
func (_Distribution *DistributionCallerSession) CheckProof(root [32]byte, proof [][32]byte, hash [32]byte) (bool, error) {
	return _Distribution.Contract.CheckProof(&_Distribution.CallOpts, root, proof, hash)
}

// Claimed is a free data retrieval call binding the contract method 0x8b45d08f.
//
// Solidity: function claimed(bytes32 _root, bytes32 _username) constant returns(bool)
func (_Distribution *DistributionCaller) Claimed(opts *bind.CallOpts, _root [32]byte, _username [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "claimed", _root, _username)
	return *ret0, err
}

// Claimed is a free data retrieval call binding the contract method 0x8b45d08f.
//
// Solidity: function claimed(bytes32 _root, bytes32 _username) constant returns(bool)
func (_Distribution *DistributionSession) Claimed(_root [32]byte, _username [32]byte) (bool, error) {
	return _Distribution.Contract.Claimed(&_Distribution.CallOpts, _root, _username)
}

// Claimed is a free data retrieval call binding the contract method 0x8b45d08f.
//
// Solidity: function claimed(bytes32 _root, bytes32 _username) constant returns(bool)
func (_Distribution *DistributionCallerSession) Claimed(_root [32]byte, _username [32]byte) (bool, error) {
	return _Distribution.Contract.Claimed(&_Distribution.CallOpts, _root, _username)
}

// Distributions is a free data retrieval call binding the contract method 0xdd0e6215.
//
// Solidity: function distributions(bytes32 ) constant returns(bool active)
func (_Distribution *DistributionCaller) Distributions(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "distributions", arg0)
	return *ret0, err
}

// Distributions is a free data retrieval call binding the contract method 0xdd0e6215.
//
// Solidity: function distributions(bytes32 ) constant returns(bool active)
func (_Distribution *DistributionSession) Distributions(arg0 [32]byte) (bool, error) {
	return _Distribution.Contract.Distributions(&_Distribution.CallOpts, arg0)
}

// Distributions is a free data retrieval call binding the contract method 0xdd0e6215.
//
// Solidity: function distributions(bytes32 ) constant returns(bool active)
func (_Distribution *DistributionCallerSession) Distributions(arg0 [32]byte) (bool, error) {
	return _Distribution.Contract.Distributions(&_Distribution.CallOpts, arg0)
}

// GetEVMScriptExecutor is a free data retrieval call binding the contract method 0x2914b9bd.
//
// Solidity: function getEVMScriptExecutor(bytes _script) constant returns(address)
func (_Distribution *DistributionCaller) GetEVMScriptExecutor(opts *bind.CallOpts, _script []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getEVMScriptExecutor", _script)
	return *ret0, err
}

// GetEVMScriptExecutor is a free data retrieval call binding the contract method 0x2914b9bd.
//
// Solidity: function getEVMScriptExecutor(bytes _script) constant returns(address)
func (_Distribution *DistributionSession) GetEVMScriptExecutor(_script []byte) (common.Address, error) {
	return _Distribution.Contract.GetEVMScriptExecutor(&_Distribution.CallOpts, _script)
}

// GetEVMScriptExecutor is a free data retrieval call binding the contract method 0x2914b9bd.
//
// Solidity: function getEVMScriptExecutor(bytes _script) constant returns(address)
func (_Distribution *DistributionCallerSession) GetEVMScriptExecutor(_script []byte) (common.Address, error) {
	return _Distribution.Contract.GetEVMScriptExecutor(&_Distribution.CallOpts, _script)
}

// GetEVMScriptRegistry is a free data retrieval call binding the contract method 0xa479e508.
//
// Solidity: function getEVMScriptRegistry() constant returns(address)
func (_Distribution *DistributionCaller) GetEVMScriptRegistry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getEVMScriptRegistry")
	return *ret0, err
}

// GetEVMScriptRegistry is a free data retrieval call binding the contract method 0xa479e508.
//
// Solidity: function getEVMScriptRegistry() constant returns(address)
func (_Distribution *DistributionSession) GetEVMScriptRegistry() (common.Address, error) {
	return _Distribution.Contract.GetEVMScriptRegistry(&_Distribution.CallOpts)
}

// GetEVMScriptRegistry is a free data retrieval call binding the contract method 0xa479e508.
//
// Solidity: function getEVMScriptRegistry() constant returns(address)
func (_Distribution *DistributionCallerSession) GetEVMScriptRegistry() (common.Address, error) {
	return _Distribution.Contract.GetEVMScriptRegistry(&_Distribution.CallOpts)
}

// GetInitializationBlock is a free data retrieval call binding the contract method 0x8b3dd749.
//
// Solidity: function getInitializationBlock() constant returns(uint256)
func (_Distribution *DistributionCaller) GetInitializationBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getInitializationBlock")
	return *ret0, err
}

// GetInitializationBlock is a free data retrieval call binding the contract method 0x8b3dd749.
//
// Solidity: function getInitializationBlock() constant returns(uint256)
func (_Distribution *DistributionSession) GetInitializationBlock() (*big.Int, error) {
	return _Distribution.Contract.GetInitializationBlock(&_Distribution.CallOpts)
}

// GetInitializationBlock is a free data retrieval call binding the contract method 0x8b3dd749.
//
// Solidity: function getInitializationBlock() constant returns(uint256)
func (_Distribution *DistributionCallerSession) GetInitializationBlock() (*big.Int, error) {
	return _Distribution.Contract.GetInitializationBlock(&_Distribution.CallOpts)
}

// GetOwner is a free data retrieval call binding the contract method 0xdeb931a2.
//
// Solidity: function getOwner(bytes32 _username) constant returns(address)
func (_Distribution *DistributionCaller) GetOwner(opts *bind.CallOpts, _username [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getOwner", _username)
	return *ret0, err
}

// GetOwner is a free data retrieval call binding the contract method 0xdeb931a2.
//
// Solidity: function getOwner(bytes32 _username) constant returns(address)
func (_Distribution *DistributionSession) GetOwner(_username [32]byte) (common.Address, error) {
	return _Distribution.Contract.GetOwner(&_Distribution.CallOpts, _username)
}

// GetOwner is a free data retrieval call binding the contract method 0xdeb931a2.
//
// Solidity: function getOwner(bytes32 _username) constant returns(address)
func (_Distribution *DistributionCallerSession) GetOwner(_username [32]byte) (common.Address, error) {
	return _Distribution.Contract.GetOwner(&_Distribution.CallOpts, _username)
}

// GetRecoveryVault is a free data retrieval call binding the contract method 0x32f0a3b5.
//
// Solidity: function getRecoveryVault() constant returns(address)
func (_Distribution *DistributionCaller) GetRecoveryVault(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getRecoveryVault")
	return *ret0, err
}

// GetRecoveryVault is a free data retrieval call binding the contract method 0x32f0a3b5.
//
// Solidity: function getRecoveryVault() constant returns(address)
func (_Distribution *DistributionSession) GetRecoveryVault() (common.Address, error) {
	return _Distribution.Contract.GetRecoveryVault(&_Distribution.CallOpts)
}

// GetRecoveryVault is a free data retrieval call binding the contract method 0x32f0a3b5.
//
// Solidity: function getRecoveryVault() constant returns(address)
func (_Distribution *DistributionCallerSession) GetRecoveryVault() (common.Address, error) {
	return _Distribution.Contract.GetRecoveryVault(&_Distribution.CallOpts)
}

// GetRootsCount is a free data retrieval call binding the contract method 0x9423fc6e.
//
// Solidity: function getRootsCount() constant returns(uint256 count)
func (_Distribution *DistributionCaller) GetRootsCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getRootsCount")
	return *ret0, err
}

// GetRootsCount is a free data retrieval call binding the contract method 0x9423fc6e.
//
// Solidity: function getRootsCount() constant returns(uint256 count)
func (_Distribution *DistributionSession) GetRootsCount() (*big.Int, error) {
	return _Distribution.Contract.GetRootsCount(&_Distribution.CallOpts)
}

// GetRootsCount is a free data retrieval call binding the contract method 0x9423fc6e.
//
// Solidity: function getRootsCount() constant returns(uint256 count)
func (_Distribution *DistributionCallerSession) GetRootsCount() (*big.Int, error) {
	return _Distribution.Contract.GetRootsCount(&_Distribution.CallOpts)
}

// GetUsername is a free data retrieval call binding the contract method 0xce43c032.
//
// Solidity: function getUsername(address _owner) constant returns(bytes32)
func (_Distribution *DistributionCaller) GetUsername(opts *bind.CallOpts, _owner common.Address) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "getUsername", _owner)
	return *ret0, err
}

// GetUsername is a free data retrieval call binding the contract method 0xce43c032.
//
// Solidity: function getUsername(address _owner) constant returns(bytes32)
func (_Distribution *DistributionSession) GetUsername(_owner common.Address) ([32]byte, error) {
	return _Distribution.Contract.GetUsername(&_Distribution.CallOpts, _owner)
}

// GetUsername is a free data retrieval call binding the contract method 0xce43c032.
//
// Solidity: function getUsername(address _owner) constant returns(bytes32)
func (_Distribution *DistributionCallerSession) GetUsername(_owner common.Address) ([32]byte, error) {
	return _Distribution.Contract.GetUsername(&_Distribution.CallOpts, _owner)
}

// HasInitialized is a free data retrieval call binding the contract method 0x0803fac0.
//
// Solidity: function hasInitialized() constant returns(bool)
func (_Distribution *DistributionCaller) HasInitialized(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "hasInitialized")
	return *ret0, err
}

// HasInitialized is a free data retrieval call binding the contract method 0x0803fac0.
//
// Solidity: function hasInitialized() constant returns(bool)
func (_Distribution *DistributionSession) HasInitialized() (bool, error) {
	return _Distribution.Contract.HasInitialized(&_Distribution.CallOpts)
}

// HasInitialized is a free data retrieval call binding the contract method 0x0803fac0.
//
// Solidity: function hasInitialized() constant returns(bool)
func (_Distribution *DistributionCallerSession) HasInitialized() (bool, error) {
	return _Distribution.Contract.HasInitialized(&_Distribution.CallOpts)
}

// Hash is a free data retrieval call binding the contract method 0x3abf30fc.
//
// Solidity: function hash(bytes32 _username, uint256 _award) constant returns(bytes32 hash)
func (_Distribution *DistributionCaller) Hash(opts *bind.CallOpts, _username [32]byte, _award *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "hash", _username, _award)
	return *ret0, err
}

// Hash is a free data retrieval call binding the contract method 0x3abf30fc.
//
// Solidity: function hash(bytes32 _username, uint256 _award) constant returns(bytes32 hash)
func (_Distribution *DistributionSession) Hash(_username [32]byte, _award *big.Int) ([32]byte, error) {
	return _Distribution.Contract.Hash(&_Distribution.CallOpts, _username, _award)
}

// Hash is a free data retrieval call binding the contract method 0x3abf30fc.
//
// Solidity: function hash(bytes32 _username, uint256 _award) constant returns(bytes32 hash)
func (_Distribution *DistributionCallerSession) Hash(_username [32]byte, _award *big.Int) ([32]byte, error) {
	return _Distribution.Contract.Hash(&_Distribution.CallOpts, _username, _award)
}

// HashAddress is a free data retrieval call binding the contract method 0x3aa5fe59.
//
// Solidity: function hashAddress(address _address) constant returns(bytes32 hash)
func (_Distribution *DistributionCaller) HashAddress(opts *bind.CallOpts, _address common.Address) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "hashAddress", _address)
	return *ret0, err
}

// HashAddress is a free data retrieval call binding the contract method 0x3aa5fe59.
//
// Solidity: function hashAddress(address _address) constant returns(bytes32 hash)
func (_Distribution *DistributionSession) HashAddress(_address common.Address) ([32]byte, error) {
	return _Distribution.Contract.HashAddress(&_Distribution.CallOpts, _address)
}

// HashAddress is a free data retrieval call binding the contract method 0x3aa5fe59.
//
// Solidity: function hashAddress(address _address) constant returns(bytes32 hash)
func (_Distribution *DistributionCallerSession) HashAddress(_address common.Address) ([32]byte, error) {
	return _Distribution.Contract.HashAddress(&_Distribution.CallOpts, _address)
}

// HashBytes20 is a free data retrieval call binding the contract method 0x44753191.
//
// Solidity: function hashBytes20(bytes32 _username) constant returns(bytes32 hash)
func (_Distribution *DistributionCaller) HashBytes20(opts *bind.CallOpts, _username [32]byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "hashBytes20", _username)
	return *ret0, err
}

// HashBytes20 is a free data retrieval call binding the contract method 0x44753191.
//
// Solidity: function hashBytes20(bytes32 _username) constant returns(bytes32 hash)
func (_Distribution *DistributionSession) HashBytes20(_username [32]byte) ([32]byte, error) {
	return _Distribution.Contract.HashBytes20(&_Distribution.CallOpts, _username)
}

// HashBytes20 is a free data retrieval call binding the contract method 0x44753191.
//
// Solidity: function hashBytes20(bytes32 _username) constant returns(bytes32 hash)
func (_Distribution *DistributionCallerSession) HashBytes20(_username [32]byte) ([32]byte, error) {
	return _Distribution.Contract.HashBytes20(&_Distribution.CallOpts, _username)
}

// IsPetrified is a free data retrieval call binding the contract method 0xde4796ed.
//
// Solidity: function isPetrified() constant returns(bool)
func (_Distribution *DistributionCaller) IsPetrified(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "isPetrified")
	return *ret0, err
}

// IsPetrified is a free data retrieval call binding the contract method 0xde4796ed.
//
// Solidity: function isPetrified() constant returns(bool)
func (_Distribution *DistributionSession) IsPetrified() (bool, error) {
	return _Distribution.Contract.IsPetrified(&_Distribution.CallOpts)
}

// IsPetrified is a free data retrieval call binding the contract method 0xde4796ed.
//
// Solidity: function isPetrified() constant returns(bool)
func (_Distribution *DistributionCallerSession) IsPetrified() (bool, error) {
	return _Distribution.Contract.IsPetrified(&_Distribution.CallOpts)
}

// KarmaManager is a free data retrieval call binding the contract method 0x75e3d330.
//
// Solidity: function karmaManager() constant returns(address)
func (_Distribution *DistributionCaller) KarmaManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "karmaManager")
	return *ret0, err
}

// KarmaManager is a free data retrieval call binding the contract method 0x75e3d330.
//
// Solidity: function karmaManager() constant returns(address)
func (_Distribution *DistributionSession) KarmaManager() (common.Address, error) {
	return _Distribution.Contract.KarmaManager(&_Distribution.CallOpts)
}

// KarmaManager is a free data retrieval call binding the contract method 0x75e3d330.
//
// Solidity: function karmaManager() constant returns(address)
func (_Distribution *DistributionCallerSession) KarmaManager() (common.Address, error) {
	return _Distribution.Contract.KarmaManager(&_Distribution.CallOpts)
}

// Kernel is a free data retrieval call binding the contract method 0xd4aae0c4.
//
// Solidity: function kernel() constant returns(address)
func (_Distribution *DistributionCaller) Kernel(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "kernel")
	return *ret0, err
}

// Kernel is a free data retrieval call binding the contract method 0xd4aae0c4.
//
// Solidity: function kernel() constant returns(address)
func (_Distribution *DistributionSession) Kernel() (common.Address, error) {
	return _Distribution.Contract.Kernel(&_Distribution.CallOpts)
}

// Kernel is a free data retrieval call binding the contract method 0xd4aae0c4.
//
// Solidity: function kernel() constant returns(address)
func (_Distribution *DistributionCallerSession) Kernel() (common.Address, error) {
	return _Distribution.Contract.Kernel(&_Distribution.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Distribution *DistributionCaller) Registry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "registry")
	return *ret0, err
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Distribution *DistributionSession) Registry() (common.Address, error) {
	return _Distribution.Contract.Registry(&_Distribution.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Distribution *DistributionCallerSession) Registry() (common.Address, error) {
	return _Distribution.Contract.Registry(&_Distribution.CallOpts)
}

// Roots is a free data retrieval call binding the contract method 0xc2b40ae4.
//
// Solidity: function roots(uint256 ) constant returns(bytes32)
func (_Distribution *DistributionCaller) Roots(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "roots", arg0)
	return *ret0, err
}

// Roots is a free data retrieval call binding the contract method 0xc2b40ae4.
//
// Solidity: function roots(uint256 ) constant returns(bytes32)
func (_Distribution *DistributionSession) Roots(arg0 *big.Int) ([32]byte, error) {
	return _Distribution.Contract.Roots(&_Distribution.CallOpts, arg0)
}

// Roots is a free data retrieval call binding the contract method 0xc2b40ae4.
//
// Solidity: function roots(uint256 ) constant returns(bytes32)
func (_Distribution *DistributionCallerSession) Roots(arg0 *big.Int) ([32]byte, error) {
	return _Distribution.Contract.Roots(&_Distribution.CallOpts, arg0)
}

// TokenManager is a free data retrieval call binding the contract method 0x2a709b14.
//
// Solidity: function tokenManager() constant returns(address)
func (_Distribution *DistributionCaller) TokenManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "tokenManager")
	return *ret0, err
}

// TokenManager is a free data retrieval call binding the contract method 0x2a709b14.
//
// Solidity: function tokenManager() constant returns(address)
func (_Distribution *DistributionSession) TokenManager() (common.Address, error) {
	return _Distribution.Contract.TokenManager(&_Distribution.CallOpts)
}

// TokenManager is a free data retrieval call binding the contract method 0x2a709b14.
//
// Solidity: function tokenManager() constant returns(address)
func (_Distribution *DistributionCallerSession) TokenManager() (common.Address, error) {
	return _Distribution.Contract.TokenManager(&_Distribution.CallOpts)
}

// Validate is a free data retrieval call binding the contract method 0x137e430b.
//
// Solidity: function validate(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) constant returns(bool)
func (_Distribution *DistributionCaller) Validate(opts *bind.CallOpts, _root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Distribution.contract.Call(opts, out, "validate", _root, _username, _award, _proof)
	return *ret0, err
}

// Validate is a free data retrieval call binding the contract method 0x137e430b.
//
// Solidity: function validate(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) constant returns(bool)
func (_Distribution *DistributionSession) Validate(_root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (bool, error) {
	return _Distribution.Contract.Validate(&_Distribution.CallOpts, _root, _username, _award, _proof)
}

// Validate is a free data retrieval call binding the contract method 0x137e430b.
//
// Solidity: function validate(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) constant returns(bool)
func (_Distribution *DistributionCallerSession) Validate(_root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (bool, error) {
	return _Distribution.Contract.Validate(&_Distribution.CallOpts, _root, _username, _award, _proof)
}

// AddRoot is a paid mutator transaction binding the contract method 0xd59e6461.
//
// Solidity: function addRoot(bytes32 _root) returns()
func (_Distribution *DistributionTransactor) AddRoot(opts *bind.TransactOpts, _root [32]byte) (*types.Transaction, error) {
	return _Distribution.contract.Transact(opts, "addRoot", _root)
}

// AddRoot is a paid mutator transaction binding the contract method 0xd59e6461.
//
// Solidity: function addRoot(bytes32 _root) returns()
func (_Distribution *DistributionSession) AddRoot(_root [32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.AddRoot(&_Distribution.TransactOpts, _root)
}

// AddRoot is a paid mutator transaction binding the contract method 0xd59e6461.
//
// Solidity: function addRoot(bytes32 _root) returns()
func (_Distribution *DistributionTransactorSession) AddRoot(_root [32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.AddRoot(&_Distribution.TransactOpts, _root)
}

// Award is a paid mutator transaction binding the contract method 0x218ed40c.
//
// Solidity: function award(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) returns()
func (_Distribution *DistributionTransactor) Award(opts *bind.TransactOpts, _root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (*types.Transaction, error) {
	return _Distribution.contract.Transact(opts, "award", _root, _username, _award, _proof)
}

// Award is a paid mutator transaction binding the contract method 0x218ed40c.
//
// Solidity: function award(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) returns()
func (_Distribution *DistributionSession) Award(_root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.Award(&_Distribution.TransactOpts, _root, _username, _award, _proof)
}

// Award is a paid mutator transaction binding the contract method 0x218ed40c.
//
// Solidity: function award(bytes32 _root, bytes32 _username, uint256 _award, bytes32[] _proof) returns()
func (_Distribution *DistributionTransactorSession) Award(_root [32]byte, _username [32]byte, _award *big.Int, _proof [][32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.Award(&_Distribution.TransactOpts, _root, _username, _award, _proof)
}

// Initialize is a paid mutator transaction binding the contract method 0x63acc14d.
//
// Solidity: function initialize(address _tokenManager, address _karmaManager, address _registry, bytes32 _root) returns()
func (_Distribution *DistributionTransactor) Initialize(opts *bind.TransactOpts, _tokenManager common.Address, _karmaManager common.Address, _registry common.Address, _root [32]byte) (*types.Transaction, error) {
	return _Distribution.contract.Transact(opts, "initialize", _tokenManager, _karmaManager, _registry, _root)
}

// Initialize is a paid mutator transaction binding the contract method 0x63acc14d.
//
// Solidity: function initialize(address _tokenManager, address _karmaManager, address _registry, bytes32 _root) returns()
func (_Distribution *DistributionSession) Initialize(_tokenManager common.Address, _karmaManager common.Address, _registry common.Address, _root [32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.Initialize(&_Distribution.TransactOpts, _tokenManager, _karmaManager, _registry, _root)
}

// Initialize is a paid mutator transaction binding the contract method 0x63acc14d.
//
// Solidity: function initialize(address _tokenManager, address _karmaManager, address _registry, bytes32 _root) returns()
func (_Distribution *DistributionTransactorSession) Initialize(_tokenManager common.Address, _karmaManager common.Address, _registry common.Address, _root [32]byte) (*types.Transaction, error) {
	return _Distribution.Contract.Initialize(&_Distribution.TransactOpts, _tokenManager, _karmaManager, _registry, _root)
}

// TransferToVault is a paid mutator transaction binding the contract method 0x9d4941d8.
//
// Solidity: function transferToVault(address _token) returns()
func (_Distribution *DistributionTransactor) TransferToVault(opts *bind.TransactOpts, _token common.Address) (*types.Transaction, error) {
	return _Distribution.contract.Transact(opts, "transferToVault", _token)
}

// TransferToVault is a paid mutator transaction binding the contract method 0x9d4941d8.
//
// Solidity: function transferToVault(address _token) returns()
func (_Distribution *DistributionSession) TransferToVault(_token common.Address) (*types.Transaction, error) {
	return _Distribution.Contract.TransferToVault(&_Distribution.TransactOpts, _token)
}

// TransferToVault is a paid mutator transaction binding the contract method 0x9d4941d8.
//
// Solidity: function transferToVault(address _token) returns()
func (_Distribution *DistributionTransactorSession) TransferToVault(_token common.Address) (*types.Transaction, error) {
	return _Distribution.Contract.TransferToVault(&_Distribution.TransactOpts, _token)
}

// DistributionDistributionStartedIterator is returned from FilterDistributionStarted and is used to iterate over the raw logs and unpacked data for DistributionStarted events raised by the Distribution contract.
type DistributionDistributionStartedIterator struct {
	Event *DistributionDistributionStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DistributionDistributionStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DistributionDistributionStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DistributionDistributionStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DistributionDistributionStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DistributionDistributionStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DistributionDistributionStarted represents a DistributionStarted event raised by the Distribution contract.
type DistributionDistributionStarted struct {
	Root [32]byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterDistributionStarted is a free log retrieval operation binding the contract event 0xf6faee587b08bb9aaa7bd5c4a49531168d1ef9e3f510bf4d47586426baf76b48.
//
// Solidity: event DistributionStarted(bytes32 root)
func (_Distribution *DistributionFilterer) FilterDistributionStarted(opts *bind.FilterOpts) (*DistributionDistributionStartedIterator, error) {

	logs, sub, err := _Distribution.contract.FilterLogs(opts, "DistributionStarted")
	if err != nil {
		return nil, err
	}
	return &DistributionDistributionStartedIterator{contract: _Distribution.contract, event: "DistributionStarted", logs: logs, sub: sub}, nil
}

// WatchDistributionStarted is a free log subscription operation binding the contract event 0xf6faee587b08bb9aaa7bd5c4a49531168d1ef9e3f510bf4d47586426baf76b48.
//
// Solidity: event DistributionStarted(bytes32 root)
func (_Distribution *DistributionFilterer) WatchDistributionStarted(opts *bind.WatchOpts, sink chan<- *DistributionDistributionStarted) (event.Subscription, error) {

	logs, sub, err := _Distribution.contract.WatchLogs(opts, "DistributionStarted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DistributionDistributionStarted)
				if err := _Distribution.contract.UnpackLog(event, "DistributionStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// DistributionScriptResultIterator is returned from FilterScriptResult and is used to iterate over the raw logs and unpacked data for ScriptResult events raised by the Distribution contract.
type DistributionScriptResultIterator struct {
	Event *DistributionScriptResult // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DistributionScriptResultIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DistributionScriptResult)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DistributionScriptResult)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DistributionScriptResultIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DistributionScriptResultIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DistributionScriptResult represents a ScriptResult event raised by the Distribution contract.
type DistributionScriptResult struct {
	Executor   common.Address
	Script     []byte
	Input      []byte
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterScriptResult is a free log retrieval operation binding the contract event 0x5229a5dba83a54ae8cb5b51bdd6de9474cacbe9dd332f5185f3a4f4f2e3f4ad9.
//
// Solidity: event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)
func (_Distribution *DistributionFilterer) FilterScriptResult(opts *bind.FilterOpts, executor []common.Address) (*DistributionScriptResultIterator, error) {

	var executorRule []interface{}
	for _, executorItem := range executor {
		executorRule = append(executorRule, executorItem)
	}

	logs, sub, err := _Distribution.contract.FilterLogs(opts, "ScriptResult", executorRule)
	if err != nil {
		return nil, err
	}
	return &DistributionScriptResultIterator{contract: _Distribution.contract, event: "ScriptResult", logs: logs, sub: sub}, nil
}

// WatchScriptResult is a free log subscription operation binding the contract event 0x5229a5dba83a54ae8cb5b51bdd6de9474cacbe9dd332f5185f3a4f4f2e3f4ad9.
//
// Solidity: event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)
func (_Distribution *DistributionFilterer) WatchScriptResult(opts *bind.WatchOpts, sink chan<- *DistributionScriptResult, executor []common.Address) (event.Subscription, error) {

	var executorRule []interface{}
	for _, executorItem := range executor {
		executorRule = append(executorRule, executorItem)
	}

	logs, sub, err := _Distribution.contract.WatchLogs(opts, "ScriptResult", executorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DistributionScriptResult)
				if err := _Distribution.contract.UnpackLog(event, "ScriptResult", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// DistributionUserAwardedIterator is returned from FilterUserAwarded and is used to iterate over the raw logs and unpacked data for UserAwarded events raised by the Distribution contract.
type DistributionUserAwardedIterator struct {
	Event *DistributionUserAwarded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DistributionUserAwardedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DistributionUserAwarded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DistributionUserAwarded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DistributionUserAwardedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DistributionUserAwardedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DistributionUserAwarded represents a UserAwarded event raised by the Distribution contract.
type DistributionUserAwarded struct {
	Root     [32]byte
	Username [32]byte
	Award    *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterUserAwarded is a free log retrieval operation binding the contract event 0x7f4aec77cb3856bf649b1d884abdb8872424e31bd49facb76c2de7f562315cb9.
//
// Solidity: event UserAwarded(bytes32 root, bytes32 username, uint256 award)
func (_Distribution *DistributionFilterer) FilterUserAwarded(opts *bind.FilterOpts) (*DistributionUserAwardedIterator, error) {

	logs, sub, err := _Distribution.contract.FilterLogs(opts, "UserAwarded")
	if err != nil {
		return nil, err
	}
	return &DistributionUserAwardedIterator{contract: _Distribution.contract, event: "UserAwarded", logs: logs, sub: sub}, nil
}

// WatchUserAwarded is a free log subscription operation binding the contract event 0x7f4aec77cb3856bf649b1d884abdb8872424e31bd49facb76c2de7f562315cb9.
//
// Solidity: event UserAwarded(bytes32 root, bytes32 username, uint256 award)
func (_Distribution *DistributionFilterer) WatchUserAwarded(opts *bind.WatchOpts, sink chan<- *DistributionUserAwarded) (event.Subscription, error) {

	logs, sub, err := _Distribution.contract.WatchLogs(opts, "UserAwarded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DistributionUserAwarded)
				if err := _Distribution.contract.UnpackLog(event, "UserAwarded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
